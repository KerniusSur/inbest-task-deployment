# Inbest.ai frontend CI
name: Inbest.ai continuous integration frontend

permissions:
  contents: read
  id-token: write

env:
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  REMOTE_USERNAME: ${{ secrets.REMOTE_USERNAME }}
  REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
  REMOTE_PRIVATE_KEY: ${{ secrets.REMOTE_PRIVATE_KEY }}
  REMOTE_PASSPHRASE: ${{ secrets.REMOTE_PASSPHRASE }}
  REGION: europe-west4
  GAR_LOCATION: europe-west4-docker.pkg.dev/hivenote/inbest-task/inbest-task-frontend
  SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}


on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        
      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Npm install
        run: npm ci

      - name: Run prettier
        run: npx prettier --check .

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

        # with:
        #   project_id: 'hivenote'
        #   token_format: "access_token"
        #   create_credentials_file: true
        #   workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        #   service_account: ${{ env.SERVICE_ACCOUNT }}
        #   access_token_lifetime: '3600s'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.1.0

      - name: Set crdential_file
        run: gcloud auth login --cred-file=${{steps.auth.outputs.credentials_file_path}}

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build image
        run: docker build . --file Dockerfile --tag ${{ env.GAR_LOCATION }}
  
      - name: Push image
        run: docker push ${{ env.GAR_LOCATION }}

      # - name: publish
      #   run: |
      #     sh publish.sh

      - uses: Burnett01/rsync-deployments@5.2
        name: Add start.sh script to remote
        with:
          switches: -av --progress
          path: start.sh
          remote_path: ~/start.sh
          remote_host: ${{env.REMOTE_HOST}}
          remote_user: ${{env.REMOTE_USERNAME}}
          remote_port: ${{env.REMOTE_PORT}}
          remote_key: ${{env.REMOTE_PRIVATE_KEY}}
          remote_key_pass: ${{env.REMOTE_PASSPHRASE}}

      - uses: Burnett01/rsync-deployments@5.2
        name: Add docker-compose.yml to remote
        with:
          switches: -av --progress
          path: docker-compose.yml
          remote_path: ~/docker-compose.yml
          remote_host: ${{env.REMOTE_HOST}}
          remote_user: ${{env.REMOTE_USERNAME}}
          remote_port: ${{env.REMOTE_PORT}}
          remote_key: ${{env.REMOTE_PRIVATE_KEY}}
          remote_key_pass: ${{env.REMOTE_PASSPHRASE}}

      - name: Rebuild and start docker containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{env.REMOTE_HOST}}
          username: ${{env.REMOTE_USERNAME}}
          port: ${{env.REMOTE_PORT}}
          key: ${{env.REMOTE_PRIVATE_KEY}}
          passphrase: ${{env.REMOTE_PASSPHRASE}}
          script_stop: true
          script: |
            sh start.sh

      

  